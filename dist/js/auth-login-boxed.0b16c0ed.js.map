{"version":3,"file":"js/auth-login-boxed.0b16c0ed.js","mappings":"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","sources":["webpack://cork-vue3/./src/components/Progress.vue","webpack://cork-vue3/./src/components/Progress.vue?146e","webpack://cork-vue3/./src/views/demanda/demanda.vue","webpack://cork-vue3/./src/views/demanda/demanda.vue?fdb4","webpack://cork-vue3/./src/views/vendasRel/vendasRel.vue","webpack://cork-vue3/./src/views/vendasRel/vendasRel.vue?66cd"],"sourcesContent":["<template>\n  <div  \n    style=\"display: flex; justify-content: center; padding-top: 100px; ;\n    \"\n>\n    \n      <div class=\"spinner-border text-primary\" role=\"status\" style=\"width: 100px; height: 100px;\">\n        <span class=\"sr-only\"></span>\n      </div>\n \n  </div>\n</template>\n\n<script setup>\n import {indexStore} from '../store/IndexStore' ;\nconst store = indexStore(); \n</script>\n\n<style>\n\n</style>","import script from \"./Progress.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Progress.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template> \n    <div class=\"layout-px-spacing\" style=\"margin-top: -100px;\">\n        <h2 class=\"text-2xl font-medium mx-2\" data-testid=\"statements-title-txt\">Demanda Mensal de Produtos</h2>\n        <div> \n</div>\n\n{{  }}\n \n<Progress v-if=\"store.recursos.progress\" />\n\n<div v-if=\"!store.recursos.progress\">\n \n <div style=\"font-size: 17px;\">\n Estoque para os proximos:\n <select   style=\"height: 25px; width: 60px;\" v-model=\"store.diasDemanda\">\n                                            <option disabled value=\"\">Selecione</option>\n                                            <option>1</option>\n                                            <option>3</option>     \n                                            <option>5</option>  \n                                            <option>7</option>   \n                                            <option>15</option>       \n                                            <option>30</option>     \n                                            <option>90</option>    \n                                            <option>180</option> \n                                            <option>365</option> \n                                            <option>100000</option>                                                                          \n                                        </select>\n </div>\n\n\n        <div v-if=\"!store.editando\">\n            <div  >\n              \n                <div class=\"panel br-0 p-0 mt-0\">\n                    <div class=\"custom-table\">\n                        <v-client-table :data=\"demandaFilter()\" :columns=\"columns1\" :options=\"table_option1\">\n                        \n                            <template #progress=\"props\">\n                                <div class=\"progress\">\n                                    <div\n                                        role=\"progressbar\"\n                                        aria-valuemin=\"0\"\n                                        :aria-valuemax=\"props.row.progress.count\"\n                                        aria-valuenow=\"100\"\n                                        class=\"progress-bar\"\n                                        :class=\"'bg-' + props.row.progress.class\"\n                                        :style=\"{ width: props.row.progress.count + '%' }\"\n                                    ></div>\n                                </div>\n                            </template>\n                            <template #salary=\"props\"> ${{ props.row.salary }} </template>\n                            <template #actions=\"props\">\n                                <div class=\"me-2 custom-dropdown dropdown btn-group\">\n                                    <a class=\"btn dropdown-toggle btn-icon-only\" href=\"#\" role=\"button\" id=\"pendingTask\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        <svg\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            style=\"width: 24px; height: 24px\"\n                                            width=\"24\"\n                                            height=\"24\"\n                                            viewBox=\"0 0 24 24\"\n                                            fill=\"none\"\n                                            stroke=\"currentColor\"\n                                            stroke-width=\"2\"\n                                            stroke-linecap=\"round\"\n                                            stroke-linejoin=\"round\"\n                                            class=\"feather feather-more-horizontal\"\n                                        >\n                                            <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n                                            <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n                                            <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n                                        </svg>\n                                    </a>\n\n                                    <ul class=\"dropdown-menu dropdown-menu-end\">\n                                        <li>\n                                            <a href=\"javascript:void(0);\" class=\"dropdown-item\" @click=\"view_row1(props.row)\"> view </a>\n                                        </li>\n                                        <li @click=\"selectItemEdit(props.row)\">\n                                            <a href=\"javascript:void(0);\" class=\"dropdown-item\"> Edit </a>\n                                        </li>\n                                        <li @click=\"deleteItem(props.row)\">\n                                            <a href=\"javascript:void(0);\" class=\"dropdown-item\"> Delete </a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </template>\n                        </v-client-table>\n                    </div>\n                </div>\n            </div>\n        </div>\n</div>\n       \n    </div>\n</template>\n\n<script setup>\n    import Progress from '@/components/Progress.vue';\n    import {indexStore} from '../../store/IndexStore' \n    import { onMounted, ref } from 'vue';\n    import axios from 'axios'\n    import { useMeta } from '@/composables/use-meta';\n    useMeta({ title: 'Multiple Tables' });\n    const store = indexStore(); \n    const code_arr = ref([]);\n    //table 1\n\n    store.recursos.progress = true\n\n    store.diasDemanda = 3\n\n    function dataAtualFormatada(dataFormat){\n    var data = dataFormat,\n        dia  = data.getDate().toString(),\n        diaF = (dia.length == 1) ? '0'+dia : dia,\n        mes  = (data.getMonth()+1).toString(), //+1 pois no getMonth Janeiro começa com zero.\n        mesF = (mes.length == 1) ? '0'+mes : mes,\n        anoF = data.getFullYear();\n    return diaF+\"/\"+mesF+\"/\"+anoF;\n    } \n\n    function dataAtualMes(dataFormat){\n    var data = dataFormat,\n        dia  = data.getDate().toString(),\n        diaF = (dia.length == 1) ? '0'+dia : dia,\n        mes  = (data.getMonth()+1).toString(), //+1 pois no getMonth Janeiro começa com zero.\n        mesF = (mes.length == 1) ? '0'+mes : mes,\n        anoF = data.getFullYear();\n    return mesF+\"/\"+anoF;\n    } \n    \n        const end=new Date()\n        end.setHours(23,59,59,999)\n        end.getTime()\n \n\n    function formataDinheiro(item) {\n         let venda = item;\n         if (!!venda && venda.toString().includes(\",\")) {\n           venda = venda.toString().replace(\",\", \".\");\n         }\n         return parseFloat(venda)\n           .toFixed(2)\n           .replace(\".\", \",\")\n           .replace(/(\\d)(?=(\\d{3})+\\,)/g, \"$1.\");\n    }\n\n    function demandaFilter() { \n        var arr =  store.itensRelDemanda.filter(f => f.DIAS_RESTANTES < store.diasDemanda  ) \n        console.log(arr)\n         return arr\n      }\n   \n     \n   \n     \n    \n\n    //table 2\n    const columns1 = ref( ['COD_PRODUTO','NOME','DEMANDA_DIARIA','QTDE_ESTOQUE','DIAS_RESTANTES']);\n    const items1 =  demandaFilter();\n    const table_option1 = ref({\n        perPage: 10,\n        perPageValues: [5, 10, 20, 50],\n        skin: 'table ',\n        columnsClasses: { actions: 'actions text-center' },\n        sortable: [],\n        pagination: { nav: 'scroll', chunk: 5 },\n        texts: {\n            count: 'Showing {from} to {to} of {count}',\n            filter: '',\n            filterPlaceholder: 'Search...',\n            limit: 'Results:',\n        },\n        sortable: ['COD_PRODUTO','NOME','DEMANDA_DIARIA','QTDE_ESTOQUE','DIAS_RESTANTES'],\n        sortIcon: {\n            base: 'sort-icon-none',\n            up: 'sort-icon-asc',\n            down: 'sort-icon-desc',\n        },\n        resizableColumns: false,\n    });\n\n    onMounted(() => {\n        bind_data();\n    });\n\n    const bind_data = async  () => {\n        store.itensRelDemanda = []\n      var result = await axios.get(store.baseApiHTTPS+'/mercadodemanda') \n   // var result = await axios.get('http://localhost:4040/mercadodemanda') \n      \n    \n        //table 2 \n        store.itensRelDemanda =  result.data\n        store.recursos.progress = false\n\n    }\n   \n\n \n \n\n\n</script>\n\n<style>\n</style>\n","import script from \"./demanda.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./demanda.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"layout-px-spacing\" style=\"margin-top: -100px;\">\n        <h2 class=\"text-2xl font-medium mx-2\" data-testid=\"statements-title-txt\">Ticket Médio de Vendas</h2>\n        <div> \n</div>\n \n<Progress v-if=\"store.recursos.progress\" />\n\n<div v-if=\"!store.recursos.progress\">\n    <div  style=\"display: flex;\n        flex-wrap: wrap; \n                        margin: 15px 0px 15px 0px;\n                    \">\n\n                    <div class=\"card\" style=\"padding: 10px; width: 200px;height: 120px;border-radius: 10px;\n                                    align-items: center; margin: 0px 20px 15px 0px;\">\n            <span style=\"font-size: 30px; color: black;\">\n                Total Mês\n            </span> \n            <div style=\"font-size: 30px; color: forestgreen\">\n                R$ {{ totalMes()}}\n            </div>\n         </div>\n\n         <div class=\"card\" style=\"padding: 10px;  width: 200px; height: 120px; \n                                 border-radius: 10px; align-items: center;\n                                 margin: 0px 20px 15px 0px;\n                                 background-color: ;\n                                 \">\n            <span style=\"font-size: 30px; color: black; \">\n                Lucro Mês\n            </span> \n            <div style=\"font-size: 30px; color: forestgreen\">\n                R$ {{ lucroMes()}}\n            </div>\n            \n         </div> \n\n         <div class=\"card\" style=\"padding: 10px;  width: 200px; height: 120px; \n                                 border-radius: 10px; align-items: center;\n                                 margin: 0px 20px 15px 0px;\n                                 background-color: ;\n                                 \">\n            <span style=\"font-size: 30px; color: black; \">\n                Total do Dia\n            </span> \n            <div style=\"font-size: 30px; color: forestgreen\">\n                R$ {{ vendasHoje()}}\n            </div>\n            \n         </div> \n\n         <div class=\"card\" style=\"padding: 10px; width: 200px;height: \n                                120px;border-radius: 10px; align-items: center;\n                                margin: 0px 20px 15px 0px;\n                                \n                                \">\n            <span style=\"font-size: 30px; color: black;\">\n                Lucro do Dia\n            </span> \n             \n            <div style=\"font-size: 30px; color: forestgreen\">\n                R$ {{ lucroHoje()}}\n            </div>\n           \n         </div>\n       \n         \n         </div>\n        \n        <div v-if=\"!store.editando\">\n            <div  >\n              \n                <div class=\"panel br-0 p-0 mt-0\">\n                    <div class=\"custom-table\">\n                        <v-client-table :data=\"store.itensRelVendas\" :columns=\"columns1\" :options=\"table_option1\">\n                        \n                            <template #progress=\"props\">\n                                <div class=\"progress\">\n                                    <div\n                                        role=\"progressbar\"\n                                        aria-valuemin=\"0\"\n                                        :aria-valuemax=\"props.row.progress.count\"\n                                        aria-valuenow=\"100\"\n                                        class=\"progress-bar\"\n                                        :class=\"'bg-' + props.row.progress.class\"\n                                        :style=\"{ width: props.row.progress.count + '%' }\"\n                                    ></div>\n                                </div>\n                            </template>\n                            <template #salary=\"props\"> ${{ props.row.salary }} </template>\n                            <template #actions=\"props\">\n                                <div class=\"me-2 custom-dropdown dropdown btn-group\">\n                                    <a class=\"btn dropdown-toggle btn-icon-only\" href=\"#\" role=\"button\" id=\"pendingTask\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        <svg\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            style=\"width: 24px; height: 24px\"\n                                            width=\"24\"\n                                            height=\"24\"\n                                            viewBox=\"0 0 24 24\"\n                                            fill=\"none\"\n                                            stroke=\"currentColor\"\n                                            stroke-width=\"2\"\n                                            stroke-linecap=\"round\"\n                                            stroke-linejoin=\"round\"\n                                            class=\"feather feather-more-horizontal\"\n                                        >\n                                            <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n                                            <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n                                            <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n                                        </svg>\n                                    </a>\n\n                                    <ul class=\"dropdown-menu dropdown-menu-end\">\n                                        <li>\n                                            <a href=\"javascript:void(0);\" class=\"dropdown-item\" @click=\"view_row1(props.row)\"> view </a>\n                                        </li>\n                                        <li @click=\"selectItemEdit(props.row)\">\n                                            <a href=\"javascript:void(0);\" class=\"dropdown-item\"> Edit </a>\n                                        </li>\n                                        <li @click=\"deleteItem(props.row)\">\n                                            <a href=\"javascript:void(0);\" class=\"dropdown-item\"> Delete </a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </template>\n                        </v-client-table>\n                    </div>\n                </div>\n            </div>\n        </div>\n</div>\n       \n    </div>\n</template>\n\n<script setup>\n    import Progress from '@/components/Progress.vue';\n    import {indexStore} from '../../store/IndexStore' \n    import { onMounted, ref } from 'vue';\n    import axios from 'axios'\n    import { useMeta } from '@/composables/use-meta';\n    useMeta({ title: 'Multiple Tables' });\n    const store = indexStore(); \n    const code_arr = ref([]);\n    //table 1\n\n    store.recursos.progress = true\n\n    function dataAtualFormatada(dataFormat){\n    var data = dataFormat,\n        dia  = data.getDate().toString(),\n        diaF = (dia.length == 1) ? '0'+dia : dia,\n        mes  = (data.getMonth()+1).toString(), //+1 pois no getMonth Janeiro começa com zero.\n        mesF = (mes.length == 1) ? '0'+mes : mes,\n        anoF = data.getFullYear();\n    return diaF+\"/\"+mesF+\"/\"+anoF;\n    } \n\n    function dataAtualMes(dataFormat){\n    var data = dataFormat,\n        dia  = data.getDate().toString(),\n        diaF = (dia.length == 1) ? '0'+dia : dia,\n        mes  = (data.getMonth()+1).toString(), //+1 pois no getMonth Janeiro começa com zero.\n        mesF = (mes.length == 1) ? '0'+mes : mes,\n        anoF = data.getFullYear();\n    return mesF+\"/\"+anoF;\n    } \n    \n        const end=new Date()\n        end.setHours(23,59,59,999)\n        end.getTime()\n \n\n    function formataDinheiro(item) {\n         let venda = item;\n         if (!!venda && venda.toString().includes(\",\")) {\n           venda = venda.toString().replace(\",\", \".\");\n         }\n         return parseFloat(venda)\n           .toFixed(2)\n           .replace(\".\", \",\")\n           .replace(/(\\d)(?=(\\d{3})+\\,)/g, \"$1.\");\n    }\n\n    function vendasHoje(dtfilter) { \n        var arr =  store.itensRelVendas.filter(f => f.DATA==dataAtualFormatada(new Date())) \n        var sum = 0; \n        for(var i =0;i<arr.length;i++){ \n          sum+=arr[i].VALOR; \n        }  \n        return formataDinheiro(sum)\n      }\n   \n      function lucroHoje(dtfilter) { \n        var arr =  store.itensRelVendas.filter(f => f.DATA==dataAtualFormatada(new Date())) \n        var sum = 0; \n        for(var i =0;i<arr.length;i++){ \n          sum+=arr[i].LUCRO; \n        }  \n        return formataDinheiro(sum)\n      }\n   \n      function totalMes(dtfilter) { \n        var arr =  store.itensRelVendas.filter(f => f.MES == dataAtualMes(new Date())) \n        var sum = 0; \n        for(var i =0;i<arr.length;i++){ \n          sum+=arr[i].VALOR; \n        }  \n        return formataDinheiro(sum)\n      }\n\n      function lucroMes(dtfilter) { \n        var arr =  store.itensRelVendas.filter(f => f.MES == dataAtualMes(new Date())) \n        var sum = 0; \n        for(var i =0;i<arr.length;i++){ \n          sum+=arr[i].LUCRO; \n        }  \n        return formataDinheiro(sum)\n      }\n   \n     \n    \n\n    //table 2\n    const columns1 = ref( ['ID','DATA','COD_PRODUTO','NOME','QTDE','VALOR','CUSTO','LUCRO','PERC_LUCRO' ]);\n    const items1 = store.itensRelVendas;\n    const table_option1 = ref({\n        perPage: 10,\n        perPageValues: [5, 10, 20, 50],\n        skin: 'table ',\n        columnsClasses: { actions: 'actions text-center' },\n        sortable: [],\n        pagination: { nav: 'scroll', chunk: 5 },\n        texts: {\n            count: 'Showing {from} to {to} of {count}',\n            filter: '',\n            filterPlaceholder: 'Search...',\n            limit: 'Results:',\n        },\n        sortable: ['ID','DATA','COD_PRODUTO','NOME','QTDE','VALOR','CUSTO','LUCRO','PERC_LUCRO' ],\n        sortIcon: {\n            base: 'sort-icon-none',\n            up: 'sort-icon-asc',\n            down: 'sort-icon-desc',\n        },\n        resizableColumns: false,\n    });\n\n    onMounted(() => {\n        bind_data();\n    });\n\n    const bind_data = async  () => {\n        store.itensRelVendas = []\n       var result = await axios.get(store.baseApiHTTPS+'/mercadovendas') \n      \n    \n        //table 2\n        console.log(result.data)\n        store.itensRelVendas =  result.data\n        store.recursos.progress = false\n\n    }\n    //table 2\n    const view_row1 = (item) => {\n        alert('ID: ' + item1.value.ID + ', Name: ' + item1.value.NOMENCLATURA);\n    };\n\n \n \n\n\n</script>\n\n<style>\n</style>\n","import script from \"./vendasRel.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./vendasRel.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["indexStore","__exports__","useMeta","title","store","ref","recursos","progress","diasDemanda","end","Date","demandaFilter","arr","itensRelDemanda","filter","f","DIAS_RESTANTES","console","log","setHours","getTime","columns1","table_option1","perPage","perPageValues","skin","columnsClasses","actions","sortable","pagination","nav","chunk","texts","count","filterPlaceholder","limit","base","up","down","onMounted","bind_data","axios","baseApiHTTPS","result","data","dataAtualFormatada","dataFormat","dia","getDate","toString","diaF","length","mes","getMonth","mesF","anoF","getFullYear","dataAtualMes","formataDinheiro","item","venda","includes","replace","parseFloat","toFixed","vendasHoje","dtfilter","itensRelVendas","DATA","sum","i","VALOR","lucroHoje","LUCRO","totalMes","MES","lucroMes","view_row1","alert","item1","value","ID","NOMENCLATURA"],"sourceRoot":""}